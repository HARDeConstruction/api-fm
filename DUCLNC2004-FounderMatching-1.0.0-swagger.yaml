openapi: 3.0.0
info:
  title: founder-matching-api
  version: "1.0.0"
  description: The API for the FounderMatching project by HarDeconstruction

servers:
  # Added by API Auto Mocking Plugin
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/HARDeConstruction/FounderMatchingAPI/1.0.0

security:
  - bearerAuth: []

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    # ENUMS
    GenderType:
      type: string
      enum:
        - male
        - female
        - other

    PrivacyType:
      type: string
      enum:
        - public
        - private
        - connections

    MatchStatus:
      type: string
      enum:
        - pending
        - accepted
        - rejected

    # TABLE SCHEMAS
    UserAccount:
      type: object
      additionalProperties: false
      properties:
        UserID:
          type: integer
          format: int32
          minimum: 0
          maximum: 2147483647
        ClerkUserID:
          type: string
          format: uuid
          maxLength: 200
          pattern: "^[A-Za-z0-9_-]+$"
        Email:
          type: string
          format: email
          maxLength: 255
          pattern: "^[^@\\s]+@[^@\\s]+\\.[^@\\s]+$"
        FirstName:
          type: string
          maxLength: 50
          pattern: \"^[A-Za-z]+((\s)?((\'|\-|\.)?([A-Za-z])+))*$"
        LastName:
          type: string
          maxLength: 50
          pattern: \"^[A-Za-z]+((\s)?((\'|\-|\.)?([A-Za-z])+))*$"
      required:
        - UserID
        - ClerkUserID
        - Email
        - FirstName
        - LastName

    PhoneNumber:
      type: object
      additionalProperties: false
      properties:
        PhoneNumberID:
          type: integer
          format: int32
          minimum: 0
          maximum: 2147483647
        CountryCode:
          type: string
          maxLength: 5
          pattern: '^\d+$'
        AreaCode:
          type: string
          maxLength: 5
          pattern: '^\d+$'
        Number:
          type: string
          maxLength: 15
          pattern: '^\d+$'
      required:
        - CountryCode
        - AreaCode
        - Number

    ProfileInfo: 
      type: object
      additionalProperties: false
      properties:
        ProfileID:
          type: integer
          format: int32
          minimum: 0
          maximum: 2147483647
        UserID:
          type: integer
          format: int32
          minimum: 0
          maximum: 2147483647
        IsStartup:
          type: boolean
          default: false
        Name:
          type: string
          maxLength: 100
          pattern: \"^[A-Za-z]+((\s)?((\'|\-|\.)?([A-Za-z])+))*$"
        Email:
          type: string
          format: email
          maxLength: 255
          pattern: "^[^@\\s]+@[^@\\s]+\\.[^@\\s]+$"
        Industry:
          type: string
          maxLength: 100
          pattern: "^[A-Za-z\\s&,-]+$"
        PhoneNumber:
          $ref: "#/components/schemas/PhoneNumber"
        Country:
          type: string
          maxLength: 100
          pattern: \"^[A-Za-z]+((\s)?((\'|\-|\.)?([A-Za-z])+))*$"
        City:
          type: string
          maxLength: 100
          pattern: \"^[A-Za-z]+((\s)?((\'|\-|\.)?([A-Za-z])+))*$"
        LinkedInURL:
          type: string
          format: url
          maxLength: 255
          pattern: "^https?://(www\\.)?linkedin\\.com/.*$"
        Slogan:
          type: string
          maxLength: 255
          pattern: "^([[:print:]]|\r|\n)*$"
        WebsiteLink:
          type: string
          maxLength: 255
          pattern: \"(?:http[s]?:\/\/.)?(?:www\.)?[-a-zA-Z0-9@%._\+~#=]{2,256}\.[a-z]{2,6}\b(?:[-a-zA-Z0-9@:%_\+.~#?&\/\/=]*)"
        AvatarURL:
          type: string
          maxLength: 255
          pattern: \"(?:http[s]?:\/\/.)?(?:www\.)?[-a-zA-Z0-9@%._\+~#=]{2,256}\.[a-z]{2,6}\b(?:[-a-zA-Z0-9@:%_\+.~#?&\/\/=]*)"
        Description:
          type: string
          maxLength: 500
          pattern: "^([[:print:]]|\r|\n)*$"
        # Candidate only fields
        HobbyInterest:
          type: string
          maxLength: 500
          pattern: "^([[:print:]]|\r|\n)*$"
        Gender:
          $ref: '#/components/schemas/GenderType'
        Education:
          type: string
          maxLength: 500
          pattern: \"^[A-Za-z]+((\s)?((\'|\-|\.)?([A-Za-z])+))*$"
        DateOfBirth:
          type: string
          format: date
          maxLength: 64
        # Startup only fields
        CurrentStage:
          type: string
          maxLength: 255
          pattern: "^([[:print:]]|\r|\n)*$"
        # Array-valued fields
        Experiences:
          type: array
          maxItems: 20
          items:
            $ref: '#/components/schemas/Experience'
        Certificates:
          type: array
          maxItems: 20
          items:
            $ref: '#/components/schemas/Certificate'
        Achievements:
          type: array
          maxItems: 20
          items:
            $ref: '#/components/schemas/Achievement'
        PrivacySettings:
          $ref: '#/components/schemas/ProfilePrivacySettings'

      required:
        - UserID
        - Name
        - Email
        - Industry
        - Country
        - PrivacySettings

    ProfilePreviewCard:
      type: object
      additionalProperties: false
      properties:
        ProfileID:
          type: integer
          format: int32
          minimum: 0
          maximum: 2147483647
        IsStartup:
          type: boolean
          default: false
        Name:
          type: string
          maxLength: 100
          pattern: \"^[A-Za-z]+((\s)?((\'|\-|\.)?([A-Za-z])+))*$"
        Occupation:
          type: string
          maxLength: 500
          pattern: \"^[A-Za-z]+((\s)?((\'|\-|\.)?([A-Za-z])+))*$"
        AvatarURL:
          type: string
          maxLength: 255
          pattern: \"(?:http[s]?:\/\/.)?(?:www\.)?[-a-zA-Z0-9@%._\+~#=]{2,256}\.[a-z]{2,6}\b(?:[-a-zA-Z0-9@:%_\+.~#?&\/\/=]*)"
          default: \"https://0.gravatar.com/avatar/d269186839584d00c4632d970ec5735acc0f70aa8a0eba0f69455c3dc52d7c72?size=256"
      required:
        - ProfileID
        - IsStartup
        - Name
        - Occupation
        - AvatarURL


    ProfilePrivacySettings:
      type: object
      additionalProperties: false
      properties:
        ProfileID:
          type: integer
          format: int32
          minimum: 0
          maximum: 2147483647
        GenderPrivacy:
          $ref: '#/components/schemas/PrivacyType'
        IndustryPrivacy:
          $ref: '#/components/schemas/PrivacyType'
        EmailPrivacy:
          $ref: '#/components/schemas/PrivacyType'
        PhoneNumberIDPrivacy:
          $ref: '#/components/schemas/PrivacyType'
        CountryIDPrivacy:
          $ref: '#/components/schemas/PrivacyType'
        CityPrivacy:
          $ref: '#/components/schemas/PrivacyType'
        UniversityPrivacy:
          $ref: '#/components/schemas/PrivacyType'
        LinkedInURLPrivacy:
          $ref: '#/components/schemas/PrivacyType'
        SloganPrivacy:
          $ref: '#/components/schemas/PrivacyType'
        WebsiteLinkPrivacy:
          $ref: '#/components/schemas/PrivacyType'
        CertificatePrivacy:
          $ref: '#/components/schemas/PrivacyType'
        ExperiencePrivacy:
          $ref: '#/components/schemas/PrivacyType'
        HobbyInterestPrivacy:
          $ref: '#/components/schemas/PrivacyType'
        EducationPrivacy:
          $ref: '#/components/schemas/PrivacyType'
        AchievementPrivacy:
          $ref: '#/components/schemas/PrivacyType'
      required:
        - ProfileID
        - IndustryPrivacy
        - EmailPrivacy
        - CountryIDPrivacy
        - CityPrivacy
        - LinkedInURLPrivacy
        - SloganPrivacy
        - AchievementPrivacy

    StartupMembership:
      type: object
      additionalProperties: false
      properties:
        ID:
          type: integer
          format: int32
          minimum: 0
          maximum: 2147483647
        StartupID:
          type: integer
          format: int32
          minimum: 0
          maximum: 2147483647
        UserID:
          type: integer
          format: int32
          minimum: 0
          maximum: 2147483647
        Role:
          type: string
          maxLength: 100
          pattern: \"^[A-Za-z]+((\s)?((\'|\-|\.)?([A-Za-z])+))*$"
        Description:
          type: string
          maxLength: 2000
          pattern: "^([[:print:]]|\r|\n)*$"
      required:
        - ID
        - StartupID
        - UserID
        - Role

    Notification:
      type: object
      additionalProperties: false
      properties:
        ID:
          type: integer
          format: int32
          minimum: 0
          maximum: 2147483647
        Recipient:
          type: integer
          format: int32
          minimum: 0
          maximum: 2147483647
        Data:
          type: string
          maxLength: 2000
          pattern: "^([[:print:]]|\r|\n)*$"
        Read:
          type: boolean
          default: false
        CreatedDateTime:
          type: string
          format: date-time
          maxLength: 64
          pattern: "^\\d{4}-(0[1-9]|1[0-2])-(0[1-9]|[12]\\d|3[01])T([01]\\d|2[0-3]):[0-5]\\d:[0-5]\\d(\\.\\d+)?(Z|[+-][01]\\d:[0-5]\\d)?$"
        IsStartupNotified:
          type: boolean
          default: false
      required:
        - Recipient
        - Read
        - CreatedDateTime

    Tags:
      type: object
      additionalProperties: false
      properties:
        ID:
          type: integer
          format: int32
          minimum: 0
          maximum: 2147483647
        Value:
          type: string
          maxLength: 50
          pattern: "^[[:print:]]*$"
        Description:
          type: string
          maxLength: 2000
          pattern: "^([[:print:]]|\r|\n)*$"
      required:
        - Value

    Experience:
      type: object
      additionalProperties: false
      properties:
        ExperienceID:
          type: integer
          format: int32
          minimum: 0
          maximum: 2147483647
        ProfileOwner:
          type: integer
          format: int32
          minimum: 0
          maximum: 2147483647
        CompanyName:
          type: string
          maxLength: 100
          pattern: "^[A-Za-z0-9\\s&',.-]+$"
        Role:
          type: string
          maxLength: 100
          pattern: "^[A-Za-z0-9\\s&',.-]+$"
        Location:
          type: string
          maxLength: 100
          pattern: \"^[A-Za-z]+((\s)?((\'|\-|\.)?([A-Za-z])+))*$"
        Description:
          type: string
          maxLength: 2000
          pattern: "^([[:print:]]|\r|\n)*$"
        StartDate:
          type: string
          format: date
          maxLength: 64
        EndDate:
          type: string
          format: date
          maxLength: 64
      required:
        - ProfileOwner
        - CompanyName
        - StartDate

    Certificate:
      type: object
      additionalProperties: false
      properties:
        CertificateID:  
          type: integer
          format: int32
          minimum: 0
          maximum: 2147483647
        ProfileOwner:
          type: integer
          format: int32
          minimum: 0
          maximum: 2147483647
        Name:
          type: string
          maxLength: 255
          pattern: "^[A-Za-z0-9\\s&',.-]+$"
        Skills:
          type: string
          maxLength: 100
          pattern: "^[A-Za-z0-9\\s&',.-]+$"
        Description:
          type: string
          maxLength: 2000
          pattern: "^([[:print:]]|\r|\n)*$"
        StartDate:
          type: string
          format: date
          maxLength: 64
        EndDate:
          type: string
          format: date
          maxLength: 64
        GPA:
          type: number
          format: float
          minimum: 0
          maximum: 2147483647
      required:
        - ProfileOwner
        - Name
    Achievement:
      type: object
      additionalProperties: false
      properties:
        AchievementID:  
          type: integer
          format: int32
          minimum: 0
          maximum: 2147483647
        ProfileOwner:
          type: integer
          format: int32
          minimum: 0
          maximum: 2147483647
        Name:
          type: string
          maxLength: 255
          pattern: "^[A-Za-z0-9\\s&',.-]+$"
        Description:
          type: string
          maxLength: 2000
          pattern: "^([[:print:]]|\r|\n)*$"
        Date:
          type: string
          format: date
          maxLength: 64
      required:
        - ProfileOwner
        - Name

paths:
  /getUserProfiles:
    get:
      tags:
        - Profile
      summary: Get the list of current user's profiles
      description: Fetch the profiles details of the logged-in user, including candidate and startup profiles information.
      operationId: getUserProfiles
      responses:
        '200':
          description: User profiles details.
          content:
            application/json:
              schema:
                type: array
                maxItems: 30
                items:
                  $ref: "#/components/schemas/ProfilePreviewCard"
        '404':
          description: Profile not found
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  error:
                    type: string
                    example: "User not found or No profile was found for this user."
                    maxLength: 100
                    pattern: "^[A-Za-z0-9 ,.?!'-]+$"
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  error:
                    type: string
                    example: "Unauthorized access"
                    maxLength: 100
                    pattern: "^[A-Za-z0-9 ,.?!'-]+$"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  error:
                    type: string
                    example: "An unexpected error occurred"
                    maxLength: 100
                    pattern: "^[A-Za-z0-9 ,.?!'-]+$"

  /profile/me:
    get:
      tags:
        - Profile
      summary: Get the current user's profile
      description: Fetch the current active profile of the current user, including basic and candidate-specific information.
      operationId: getCurrentUserProfile
      responses:
        '200':
          description: Get current user profile's detail.
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  ProfileInfo:
                    $ref: '#/components/schemas/ProfileInfo'
                required:
                - ProfileInfo
        '404':
          description: Profile not found
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  error:
                    type: string
                    example: "Profile not found."
                    maxLength: 100
                    pattern: "^[A-Za-z0-9 ,.?!'-]+$"
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  error:
                    type: string
                    example: "Unauthorized access"
                    maxLength: 100
                    pattern: "^[A-Za-z0-9 ,.?!'-]+$"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  error:
                    type: string
                    example: "An unexpected error occurred"
                    maxLength: 100
                    pattern: "^[A-Za-z0-9 ,.?!'-]+$"

    patch:
      tags:
        - Profile
      summary: Update the current user's profile
      description: Update profile information for the logged-in user.
      operationId: updateUserProfile
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties: false
              properties:
                ProfileInfo:
                  $ref: '#/components/schemas/ProfileInfo'
              required:
              - ProfileInfo
      responses:
        '200':
          description: Profile updated successfully.
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  message:
                    type: string
                    example: "Profile updated successfully."
                    maxLength: 100
                    pattern: "^[A-Za-z0-9 ,.?!'-]+$"
        '404':
          description: Profile not found
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  error:
                    type: string
                    example: "Profile not found."
                    maxLength: 100
                    pattern: "^[A-Za-z0-9 ,.?!'-]+$"
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  error:
                    type: string
                    example: "Unauthorized access"
                    maxLength: 100
                    pattern: "^[A-Za-z0-9 ,.?!'-]+$"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  error:
                    type: string
                    example: "An unexpected error occurred"
                    maxLength: 100
                    pattern: "^[A-Za-z0-9 ,.?!'-]+$"

  /profile/create:
   post:
      tags:
        - Profile
      summary: Create a new user profile
      description: Create a profile for the logged-in user.
      operationId: createUserProfile
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties: false
              properties:
                ProfileInfo:
                  $ref: '#/components/schemas/ProfileInfo'
              required:
              - ProfileInfo
      responses:
        '200':
          description: Profile created successfully.
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  message:
                    type: string
                    example: "Profile created successfully."
                    maxLength: 100
                    pattern: "^[A-Za-z0-9 ,.?!'-]+$"
        '404':
          description: Profile creation failed.
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  error:
                    type: string
                    example: "Profile creation failed."
                    maxLength: 100
                    pattern: "^[A-Za-z0-9 ,.?!'-]+$"
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  error:
                    type: string
                    example: "Unauthorized access"
                    maxLength: 100
                    pattern: "^[A-Za-z0-9 ,.?!'-]+$"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  error:
                    type: string
                    example: "An unexpected error occurred"
                    maxLength: 100
                    pattern: "^[A-Za-z0-9 ,.?!'-]+$"

  /notifications:
    get:
      tags:
        - Notifications
      summary: Get all notifications for the current user
      description: Fetch all notifications for the logged-in user.
      operationId: getNotifications
      responses:
        '200':
          description: Notifications fetched successfully.
          content:
            application/json:
              schema:
                type: array
                maxItems: 50
                items:
                  $ref: '#/components/schemas/Notification'
        '404':
          description: Notifications not found
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  error:
                    type: string
                    example: "Notification not found."
                    maxLength: 100
                    pattern: "^[A-Za-z0-9 ,.?!'-]+$"
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  error:
                    type: string
                    example: "Unauthorized access"
                    maxLength: 100
                    pattern: "^[A-Za-z0-9 ,.?!'-]+$"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  error:
                    type: string
                    example: "An unexpected error occurred"
                    maxLength: 100
                    pattern: "^[A-Za-z0-9 ,.?!'-]+$"

  /notifications/{id}:
    patch:
      tags:
        - Notifications
      summary: Mark a notification as read
      description: Update the read status of a specific notification by ID.
      operationId: markNotificationAsRead
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties: false
              properties:
                Read:
                  type: boolean
                  example: true
      responses:
        '200':
          description: Notification updated successfully.
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  message:
                    type: string
                    example: "Notification updated successfully."
                    maxLength: 100
                    pattern: "^[A-Za-z0-9 ,.?!'-]+$"
        '404':
          description: Notification not found
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  error:
                    type: string
                    example: "Notification not found."
                    maxLength: 100
                    pattern: "^[A-Za-z0-9 ,.?!'-]+$"
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  error:
                    type: string
                    example: "Unauthorized access"
                    maxLength: 100
                    pattern: "^[A-Za-z0-9 ,.?!'-]+$"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  error:
                    type: string
                    example: "An unexpected error occurred"
                    maxLength: 100
                    pattern: "^[A-Za-z0-9 ,.?!'-]+$"