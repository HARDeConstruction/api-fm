openapi: 3.0.0
info:
  title: founder-matching-api
  version: "1.0.0"
  description: The API for the FounderMatching project by HarDeconstruction

servers:
  # Added by API Auto Mocking Plugin
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/HARDeConstruction/FounderMatchingAPI/1.0.0

security:
  - bearerAuth: []

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    # ENUMS
    GenderType:
      type: string
      enum:
        - male
        - female
        - other

    PrivacyType:
      type: string
      enum:
        - public
        - private
        - connections

    MatchStatus:
      type: string
      enum:
        - pending
        - accepted
        - rejected

    # TABLE SCHEMAS
    UserAccount:
      type: object
      additionalProperties: false
      properties:
        UserID:
          type: integer
          format: int32
          minimum: 0
          maximum: 2147483647
        ClerkUserID:
          type: string
          format: uuid
          maxLength: 200
          pattern: "^[A-Za-z0-9_-]+$"
        Email:
          type: string
          format: email
          maxLength: 255
          pattern: "^[^@\\s]+@[^@\\s]+\\.[^@\\s]+$"
        FirstName:
          type: string
          maxLength: 50
          pattern: \"^[A-Za-z]+((\s)?((\'|\-|\.)?([A-Za-z])+))*$"
        LastName:
          type: string
          maxLength: 50
          pattern: \"^[A-Za-z]+((\s)?((\'|\-|\.)?([A-Za-z])+))*$"
      required:
        - UserID
        - ClerkUserID
        - Email
        - FirstName
        - LastName

    ProfileInfo: 
      type: object
      additionalProperties: false
      properties:
        ProfileID:
          type: integer
          format: int32
          minimum: 0
          maximum: 2147483647
        UserID:
          type: integer
          format: int32
          minimum: 0
          maximum: 2147483647
        IsStartup:
          type: boolean
          default: false
        Name:
          type: string
          maxLength: 100
          pattern: \"^[A-Za-z]+((\s)?((\'|\-|\.)?([A-Za-z])+))*$"
        Email:
          type: string
          format: email
          maxLength: 255
          pattern: "^[^@\\s]+@[^@\\s]+\\.[^@\\s]+$"
        Industry:
          type: string
          maxLength: 100
          pattern: "^[A-Za-z\\s&,-]+$"
        PhoneNumber:
          type: string
          format: phone
          maxLength: 20
          pattern: "^\\+[1-9]{1}[0-9]{3,14}$"
        Country:
          type: string
          maxLength: 100
          pattern: \"^[A-Za-z]+((\s)?((\'|\-|\.)?([A-Za-z])+))*$"
        City:
          type: string
          maxLength: 100
          pattern: \"^[A-Za-z]+((\s)?((\'|\-|\.)?([A-Za-z])+))*$"
        LinkedInURL:
          type: string
          format: url
          maxLength: 255
          pattern: "^https?://(www\\.)?linkedin\\.com/.*$"
        Slogan:
          type: string
          maxLength: 255
          pattern: "^([[:print:]]|\r|\n)*$"
        WebsiteLink:
          type: string
          maxLength: 255
          pattern: \"(?:http[s]?:\/\/.)?(?:www\.)?[-a-zA-Z0-9@%._\+~#=]{2,256}\.[a-z]{2,6}\b(?:[-a-zA-Z0-9@:%_\+.~#?&\/\/=]*)"
        Avatar: 
          type: string
          format: binary
          maxLength: 2097152
        Description:
          type: string
          maxLength: 5000
          pattern: "^([[:print:]]|\r|\n)*$"
        # Candidate only fields
        HobbyInterest:
          type: string
          maxLength: 500
          pattern: "^([[:print:]]|\r|\n)*$"
        Gender:
          $ref: '#/components/schemas/GenderType'
        Education:
          type: string
          maxLength: 500
          pattern: \"^[A-Za-z]+((\s)?((\'|\-|\.)?([A-Za-z])+))*$"
        DateOfBirth:
          type: string
          format: date
          maxLength: 64
        # Startup only fields
        CurrentStage:
          type: string
          maxLength: 255
          pattern: "^([[:print:]]|\r|\n)*$"
        AboutUs:
          type: string
          maxLength: 5000
          pattern: "^([[:print:]]|\r|\n)*$"
        Statement:
          type: string
          maxLength: 1000
          pattern: \"([[:print:]]|\r|\n)*$"
        # Array-valued fields
        Experiences:
          type: array
          maxItems: 20
          items:
            $ref: '#/components/schemas/Experience'
        Certificates:
          type: array
          maxItems: 20
          items:
            $ref: '#/components/schemas/Certificate'
        Achievements:
          type: array
          maxItems: 20
          items:
            $ref: '#/components/schemas/Achievement'
        JobPositions:
          type: array 
          maxItems: 20
          items:
            $ref: '#/components/schemas/JobPosition'
        PrivacySettings:
          $ref: '#/components/schemas/ProfilePrivacySettings'

      required:
        - UserID
        - Name
        - Email
        - Industry
        - Country
        - PrivacySettings

    ProfilePreviewCard:
      type: object
      additionalProperties: false
      properties:
        ProfileID:
          type: integer
          format: int32
          minimum: 0
          maximum: 2147483647
        IsStartup:
          type: boolean
          default: false
        Name:
          type: string
          maxLength: 100
          pattern: \"^[A-Za-z]+((\s)?((\'|\-|\.)?([A-Za-z])+))*$"
        Occupation:
          type: string
          maxLength: 500
          pattern: \"^[A-Za-z]+((\s)?((\'|\-|\.)?([A-Za-z])+))*$"
        Avatar: 
          type: string
          format: binary
          maxLength: 2097152
        Tags:
          type: array
          maxItems: 30
          items:
            type: string
            maxLength: 50
            pattern: "^([[:print:]])*$"
      required:
        - ProfileID
        - IsStartup
        - Name

    ProfilePrivacySettings:
      type: object
      additionalProperties: false
      properties:
        ProfileID:
          type: integer
          format: int32
          minimum: 0
          maximum: 2147483647
        GenderPrivacy:
          $ref: '#/components/schemas/PrivacyType'
        IndustryPrivacy:
          $ref: '#/components/schemas/PrivacyType'
        EmailPrivacy:
          $ref: '#/components/schemas/PrivacyType'
        PhoneNumberIDPrivacy:
          $ref: '#/components/schemas/PrivacyType'
        CountryIDPrivacy:
          $ref: '#/components/schemas/PrivacyType'
        CityPrivacy:
          $ref: '#/components/schemas/PrivacyType'
        UniversityPrivacy:
          $ref: '#/components/schemas/PrivacyType'
        LinkedInURLPrivacy:
          $ref: '#/components/schemas/PrivacyType'
        SloganPrivacy:
          $ref: '#/components/schemas/PrivacyType'
        WebsiteLinkPrivacy:
          $ref: '#/components/schemas/PrivacyType'
        CertificatePrivacy:
          $ref: '#/components/schemas/PrivacyType'
        ExperiencePrivacy:
          $ref: '#/components/schemas/PrivacyType'
        HobbyInterestPrivacy:
          $ref: '#/components/schemas/PrivacyType'
        EducationPrivacy:
          $ref: '#/components/schemas/PrivacyType'
        DateOfBirthPrivacy:
          $ref: '#/components/schemas/PrivacyType'
        AchievementPrivacy:
          $ref: '#/components/schemas/PrivacyType'
      required:
        - ProfileID
        - IndustryPrivacy
        - EmailPrivacy
        - CountryIDPrivacy
        - CityPrivacy
        - LinkedInURLPrivacy
        - SloganPrivacy
        - AchievementPrivacy

    StartupMembership:
      type: object
      additionalProperties: false
      properties:
        ID:
          type: integer
          format: int32
          minimum: 0
          maximum: 2147483647
        StartupID:
          type: integer
          format: int32
          minimum: 0
          maximum: 2147483647
        UserID:
          type: integer
          format: int32
          minimum: 0
          maximum: 2147483647
        Role:
          type: string
          maxLength: 100
          pattern: \"^[A-Za-z]+((\s)?((\'|\-|\.)?([A-Za-z])+))*$"
        Description:
          type: string
          maxLength: 2000
          pattern: "^([[:print:]]|\r|\n)*$"
      required:
        - ID
        - StartupID
        - UserID
        - Role
          
    Notification:
      type: object
      additionalProperties: false
      properties:
        ID:
          type: integer
          format: int32
          minimum: 0
          maximum: 2147483647
        Recipient:
          type: integer
          format: int32
          minimum: 0
          maximum: 2147483647
        Data:
          type: string
          maxLength: 2000
          pattern: "^([[:print:]]|\r|\n)*$"
        Read:
          type: boolean
          default: false
        CreatedDateTime:
          type: string
          format: date-time
          maxLength: 64
          pattern: "^\\d{4}-(0[1-9]|1[0-2])-(0[1-9]|[12]\\d|3[01])T([01]\\d|2[0-3]):[0-5]\\d:[0-5]\\d(\\.\\d+)?(Z|[+-][01]\\d:[0-5]\\d)?$"
        IsStartupNotified:
          type: boolean
          default: false
      required:
        - Recipient
        - Read
        - CreatedDateTime

    Experience:
      type: object
      additionalProperties: false
      properties:
        ExperienceID:
          type: integer
          format: int32
          minimum: 0
          maximum: 2147483647
        ProfileOwner:
          type: integer
          format: int32
          minimum: 0
          maximum: 2147483647
        CompanyName:
          type: string
          maxLength: 100
          pattern: "^[A-Za-z0-9\\s&',.-]+$"
        Role:
          type: string
          maxLength: 100
          pattern: "^[A-Za-z0-9\\s&',.-]+$"
        Location:
          type: string
          maxLength: 100
          pattern: \"^[A-Za-z]+((\s)?((\'|\-|\.)?([A-Za-z])+))*$"
        Description:
          type: string
          maxLength: 2000
          pattern: "^([[:print:]]|\r|\n)*$"
        StartDate:
          type: string
          format: date
          maxLength: 64
        EndDate:
          type: string
          format: date
          maxLength: 64
        Tags:
          type: array
          maxItems: 30
          items:
            type: string
            maxLength: 50
            pattern: "^([[:print:]])*$"
      required:
        - ProfileOwner
        - CompanyName
        - StartDate

    Certificate:
      type: object
      additionalProperties: false
      properties:
        CertificateID:  
          type: integer
          format: int32
          minimum: 0
          maximum: 2147483647
        ProfileOwner:
          type: integer
          format: int32
          minimum: 0
          maximum: 2147483647
        Name:
          type: string
          maxLength: 255
          pattern: "^[A-Za-z0-9\\s&',.-]+$"
        Skills:
          type: string
          maxLength: 100
          pattern: "^[A-Za-z0-9\\s&',.-]+$"
        Description:
          type: string
          maxLength: 2000
          pattern: "^([[:print:]]|\r|\n)*$"
        StartDate:
          type: string
          format: date
          maxLength: 64
        EndDate:
          type: string
          format: date
          maxLength: 64
        GPA:
          type: number
          format: float
          minimum: 0
          maximum: 2147483647
        Tags:
          type: array
          maxItems: 30
          items:
            type: string
            maxLength: 50
            pattern: "^([[:print:]])*$"
      required:
        - ProfileOwner
        - Name
    Achievement:
      type: object
      additionalProperties: false
      properties:
        AchievementID:  
          type: integer
          format: int32
          minimum: 0
          maximum: 2147483647
        ProfileOwner:
          type: integer
          format: int32
          minimum: 0
          maximum: 2147483647
        Name:
          type: string
          maxLength: 255
          pattern: "^[A-Za-z0-9\\s&',.-]+$"
        Description:
          type: string
          maxLength: 2000
          pattern: "^([[:print:]]|\r|\n)*$"
        Date:
          type: string
          format: date
          maxLength: 64
        Tags:
          type: array
          maxItems: 30
          items:
            type: string
            maxLength: 50
            pattern: "^([[:print:]])*$"
      required:
        - ProfileOwner
        - Name
    JobPosition:
      type: object
      additionalProperties: false
      properties:
        JobPositionID:  
          type: integer
          format: int32
          minimum: 0
          maximum: 2147483647
        ProfileOwner:
          type: integer
          format: int32
          minimum: 0
          maximum: 2147483647
        JobTitle:
          type: string
          maxLength: 100
          pattern: "^[A-Za-z0-9\\s&',.-]+$"
        IsOpening: 
          type: boolean
          default: true
        Country: 
          type: string
          maxLength: 100
          pattern: \"^[A-Za-z]+((\s)?((\'|\-|\.)?([A-Za-z])+))*$"
        City:
          type: string
          maxLength: 100
          pattern: \"^[A-Za-z]+((\s)?((\'|\-|\.)?([A-Za-z])+))*$"
        StartDate:
          type: string
          format: date
          maxLength: 64
        Description:
          type: string
          maxLength: 10000
          pattern: "^([[:print:]]|\r|\n)*$"
        Tags:
          type: array
          maxItems: 30
          items:
            type: string
            maxLength: 50
            pattern: "^([[:print:]])*$"
      required:
        - ProfileOwner
        - JobTitle
        - Country
    PaginatedResult:
      type: object
      properties:
        total: 
          type: integer
          format: int32
          minimum: 0
          maximum: 2147483647
        page: 
          type: integer
          format: int32
          minimum: 1
          maximum: 1048576
        per_page: 
          type: integer
          format: int32
          minimum: 1
          maximum: 500
        has_next:
          type: boolean
          default: false
        has_prev:
          type: boolean
          default: false


paths:
  /getUserProfiles:
    get:
      tags:
        - Profile
      summary: Get the list of current user's profiles
      description: Fetch the profiles details of the logged-in user, including candidate and startup profiles information.
      operationId: getUserProfiles
      responses:
        '200':
          description: User profiles details.
          content:
            application/json:
              schema:
                type: array
                maxItems: 30
                items:
                  $ref: "#/components/schemas/ProfilePreviewCard"
        '404':
          description: Profile not found
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  error:
                    type: string
                    example: "User not found or No profile was found for this user."
                    maxLength: 255
                    pattern: "^([[:print:]])*$"
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  error:
                    type: string
                    example: "Unauthorized access"
                    maxLength: 255
                    pattern: "^([[:print:]])*$"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  error:
                    type: string
                    example: "An unexpected error occurred"
                    maxLength: 255
                    pattern: "^([[:print:]])*$"

  /profile/me:
    get:
      tags:
        - Profile
      summary: Get the current user's profile
      description: Fetch the current active profile of the current user, including basic and candidate-specific information.
      operationId: getCurrentUserProfile
      responses:
        '200':
          description: Get current user profile's detail.
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  ProfileInfo:
                    $ref: '#/components/schemas/ProfileInfo'
                required:
                - ProfileInfo
        '404':
          description: Profile not found
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  error:
                    type: string
                    example: "Profile not found."
                    maxLength: 255
                    pattern: "^([[:print:]])*$"
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  error:
                    type: string
                    example: "Unauthorized access"
                    maxLength: 255
                    pattern: "^([[:print:]])*$"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  error:
                    type: string
                    example: "An unexpected error occurred"
                    maxLength: 255
                    pattern: "^([[:print:]])*$"

    patch:
      tags:
        - Profile
      summary: Update the current user's profile
      description: Update profile information for the logged-in user.
      operationId: updateUserProfile
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties: false
              properties:
                ProfileInfo:
                  $ref: '#/components/schemas/ProfileInfo'
              required:
              - ProfileInfo
      responses:
        '200':
          description: Profile updated successfully.
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  message:
                    type: string
                    example: "Profile updated successfully."
                    maxLength: 255
                    pattern: "^([[:print:]])*$"
        '404':
          description: Profile not found
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  error:
                    type: string
                    example: "Profile not found."
                    maxLength: 255
                    pattern: "^([[:print:]])*$"
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  error:
                    type: string
                    example: "Unauthorized access"
                    maxLength: 255
                    pattern: "^([[:print:]])*$"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  error:
                    type: string
                    example: "An unexpected error occurred"
                    maxLength: 255
                    pattern: "^([[:print:]])*$"

  /profile/create:
   post:
      tags:
        - Profile
      summary: Create a new user profile
      description: Create a profile for the logged-in user.
      operationId: createUserProfile
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties: false
              properties:
                ProfileInfo:
                  $ref: '#/components/schemas/ProfileInfo'
              required:
              - ProfileInfo
      responses:
        '200':
          description: Profile created successfully.
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  message:
                    type: string
                    example: "Profile created successfully."
                    maxLength: 255
                    pattern: "^([[:print:]])*$"
        '404':
          description: Profile creation failed.
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  error:
                    type: string
                    example: "Profile creation failed."
                    maxLength: 255
                    pattern: "^([[:print:]])*$"
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  error:
                    type: string
                    example: "Unauthorized access"
                    maxLength: 255
                    pattern: "^([[:print:]])*$"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  error:
                    type: string
                    example: "An unexpected error occurred"
                    maxLength: 255
                    pattern: "^([[:print:]])*$"

  /profile/{id}:
    get:
      tags:
        - Profile
      summary: Get a specific user profile, with respect to current permissions. 
      description: Fetch the profile information for a specific profile, with respect to current permissions
      operationId: getUserProfileById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
      responses:
        '200':
          description: Profile fetched successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProfileInfo'
        '404':
          description: Profile not found
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  error:
                    type: string
                    example: "Profile not found."
                    maxLength: 255
                    pattern: "^([[:print:]])*$"
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  error:
                    type: string
                    example: "Unauthorized access"
                    maxLength: 255
                    pattern: "^([[:print:]])*$"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  error:
                    type: string
                    example: "An unexpected error occurred"
                    maxLength: 255
                    pattern: "^([[:print:]])*$"

  /notifications:
    get:
      tags:
        - Notifications
      summary: Get all notifications for the current user
      description: Fetch all notifications for the logged-in user.
      operationId: getNotifications
      responses:
        '200':
          description: Notifications fetched successfully.
          content:
            application/json:
              schema:
                type: array
                maxItems: 50
                items:
                  $ref: '#/components/schemas/Notification'
        '404':
          description: Notifications not found
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  error:
                    type: string
                    example: "Notification not found."
                    maxLength: 255
                    pattern: "^([[:print:]])*$"
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  error:
                    type: string
                    example: "Unauthorized access"
                    maxLength: 255
                    pattern: "^([[:print:]])*$"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  error:
                    type: string
                    example: "An unexpected error occurred"
                    maxLength: 255
                    pattern: "^([[:print:]])*$"

  /notifications/{id}:
    patch:
      tags:
        - Notifications
      summary: Mark a notification as read
      description: Update the read status of a specific notification by ID.
      operationId: markNotificationAsRead
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties: false
              properties:
                Read:
                  type: boolean
                  example: true
      responses:
        '200':
          description: Notification updated successfully.
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  message:
                    type: string
                    example: "Notification updated successfully."
                    maxLength: 255
                    pattern: "^([[:print:]])*$"
        '404':
          description: Notification not found
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  error:
                    type: string
                    example: "Notification not found."
                    maxLength: 255
                    pattern: "^([[:print:]])*$"
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  error:
                    type: string
                    example: "Unauthorized access"
                    maxLength: 255
                    pattern: "^([[:print:]])*$"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  error:
                    type: string
                    example: "An unexpected error occurred"
                    maxLength: 255
                    pattern: "^([[:print:]])*$"
  
  /connect/:
    post:
      tags:
        - Connections
      summary: Establish a connection between two profiles
      description: Request to connect profilefrom_id to profile to_id.
      operationId: connectRequest
      parameters:
        - name: from_id
          in: query
          required: true
          schema:
            type: integer
            format: int32
            minimum: 0
            maximum: 2147483647
            example: 11
        - name: to_id
          in: query
          required: true
          schema:
            type: integer
            format: int32
            minimum: 0
            maximum: 2147483647
            example: 7
      responses:
        '200':
          description: Connection request sent successfully.
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  message:
                    type: string
                    example: "Connection request sent successfully."
                    maxLength: 255
                    pattern: "^([[:print:]])*$"
        '404':
          description: Profile not found
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  error:
                    type: string
                    example: "Profile to connect to is not found."
                    maxLength: 255
                    pattern: "^([[:print:]])*$"
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  error:
                    type: string
                    example: "Unauthorized access: Not logged-in or invalid token."
                    maxLength: 255
                    pattern: "^([[:print:]])*$"
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  error:
                    type: string
                    example: "Forbidden access: User does not own this profile, therefore cannot request a connection from this profile."
                    maxLength: 255
                    pattern: "^([[:print:]])*$"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  error:
                    type: string
                    example: "An unexpected error occurred"
                    maxLength: 255
                    pattern: "^([[:print:]])*$"
  
  /save/:
    post:
      tags:
        - Saves
      summary: Save a profile
      description: Save a profile that the user was viewing. 
      operationId: save
      parameters:
        - name: from_id
          in: query
          required: true
          schema:
            type: integer
            format: int32
            minimum: 0
            maximum: 2147483647
            example: 11
        - name: to_id
          in: query
          required: true
          schema:
            type: integer
            format: int32
            minimum: 0
            maximum: 2147483647
            example: 7
      responses:
        '200':
          description: Profile saved successfully.
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  message:
                    type: string
                    example: "Profile saved successfully."
                    maxLength: 255
                    pattern: "^([[:print:]])*$"
        '404':
          description: Profile not found
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false 
                properties:
                  error:
                    type: string
                    example: "Profile to save is not found."
                    maxLength: 255
                    pattern: "^([[:print:]])*$"
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  error:
                    type: string
                    example: "Unauthorized access: Not logged-in or invalid token."
                    maxLength: 255
                    pattern: "^([[:print:]])*$"
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  error:
                    type: string
                    example: "Forbidden access: User does not own this profile, therefore cannot save from this profile."
                    maxLength: 255
                    pattern: "^([[:print:]])*$"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  error:
                    type: string
                    example: "An unexpected error occurred"
                    maxLength: 255
                    pattern: "^([[:print:]])*$"
  
    delete:
      tags:
        - Saves
      summary: Unsave a profile
      description: Unsave a profile that the user was viewing.
      operationId: unsave
      parameters:
        - name: from_id
          in: query
          required: true
          schema:
            type: integer
            format: int32
            minimum: 0
            maximum: 2147483647
            example: 11
        - name: to_id
          in: query
          required: true
          schema:
            type: integer
            format: int32
            minimum: 0
            maximum: 2147483647
            example: 7
      responses:
        '200':
          description: Profile unsaved successfully.
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  message:
                    type: string
                    example: "Profile unsaved successfully."
                    maxLength: 255
                    pattern: "^([[:print:]])*$"
        '404':
          description: Profile not found
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  error:
                    type: string
                    example: "Profile to unsave is not found."
                    maxLength: 255
                    pattern: "^([[:print:]])*$"
        '401':
          description: Unauthorized
          content:
            application/json:
              schema: 
                type: object
                additionalProperties: false
                properties:
                  error:
                    type: string
                    example: "Unauthorized access: Not logged-in or invalid token."
                    maxLength: 255
                    pattern: "^([[:print:]])*$"
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  error:
                    type: string
                    example: "Forbidden access: User does not own this profile, therefore cannot unsave from this profile. Or, profile to_id is not in the list of from_id's saved profiles."
                    maxLength: 255
                    pattern: "^([[:print:]])*$"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  error:
                    type: string
                    example: "An unexpected error occurred"
                    maxLength: 255
                    pattern: "^([[:print:]])*$"
  /getSaved/:
    get:
      tags:
        - Saves
      summary: List of saved profiles
      description: List of profile_id's saved profiles, returned as a list of profile preview cards as a paginated result.
      operationId: getSaved
      parameters:
        - name: profile_id
          in: query
          required: true
          schema:
            type: integer
            format: int32
            minimum: 0
            maximum: 2147483647
            example: 11
      responses:
        '200':
          description: List of saved profiles
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/PaginatedResult"
                  - type: object
                    properties:
                      results:
                        type: array
                        maxItems: 20
                        items:
                          $ref: "#/components/schemas/ProfilePreviewCard"
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  error:
                    type: string
                    example: "Unauthorized access: Not logged-in or invalid token."
                    maxLength: 255
                    pattern: "^([[:print:]])*$"
        '404':
          description: Profile not found
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  error:
                    type: string
                    example: "Profile not found."
                    maxLength: 255
                    pattern: "^([[:print:]])*$"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  error:
                    type: string
                    example: "An unexpected error occurred"
                    maxLength: 255
                    pattern: "^([[:print:]])*$"
  
  /skip/:
    post:
      tags:
        - Connections
      summary: Skip a profile
      description: Skip a profile that the user was viewing.
      operationId: skip
      parameters:
        - name: from_id
          in: query
          required: true
          schema:
            type: integer
            format: int32
            minimum: 0
            maximum: 2147483647
            example: 11
        - name: to_id
          in: query
          required: true
          schema:
            type: integer
            format: int32
            minimum: 0
            maximum: 2147483647
            example: 7
      responses:
        '200':
          description: Profile skipped successfully.
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  message:
                    type: string
                    example: "Profile skipped successfully."
                    maxLength: 255
                    pattern: "^([[:print:]])*$"
        '404':
          description: Profile not found
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  error:
                    type: string
                    example: "Profile to skip is not found."
                    maxLength: 255
                    pattern: "^([[:print:]])*$"
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  error:
                    type: string
                    example: "Unauthorized access: Not logged-in or invalid token."
                    maxLength: 255
                    pattern: "^([[:print:]])*$"
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  error:
                    type: string
                    example: "Forbidden access: User does not own this profile, therefore cannot skip from this profile."
                    maxLength: 255
                    pattern: "^([[:print:]])*$"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  error:
                    type: string
                    example: "An unexpected error occurred"
                    maxLength: 255
                    pattern: "^([[:print:]])*$"

  /getSkipped/:
    get:
      tags:
        - Connections
      summary: List of skipped profiles
      description: List of profile_id's skipped profiles, returned as a list of profile preview cards as a paginated result.
      operationId: getSkipped
      parameters:
        - name: profile_id
          in: query
          required: true
          schema:
            type: integer
            format: int32
            minimum: 0
            maximum: 2147483647
            example: 11
      responses:
        '200':
          description: List of skipped profiles
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/PaginatedResult"
                  - type: object
                    properties:
                      results:
                        type: array
                        maxItems: 20
                        items:
                          $ref: "#/components/schemas/ProfilePreviewCard"
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  error:
                    type: string
                    example: "Unauthorized access: Not logged-in or invalid token."
                    maxLength: 255
                    pattern: "^([[:print:]])*$"
        '404':
          description: Profile not found
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  error:
                    type: string
                    example: "Profile not found."
                    maxLength: 255
                    pattern: "^([[:print:]])*$"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  error:
                    type: string
                    example: "An unexpected error occurred"
                    maxLength: 255
                    pattern: "^([[:print:]])*$"

  /discover/:
    get:
      tags:
        - Connections
      summary: List of suggested profiles to connect to
      description: List of profiles suggested to connect to from the specified profile ID.
      operationId: discover
      parameters:
        - name: profile_id
          in: query
          required: true
          schema:
            type: integer
            format: int32
            minimum: 0
            maximum: 2147483647
            example: 11
      responses:
        '200':
          description: List of suggested profiles
          content:
            application/json:
              schema:
                type: array
                maxItems: 10
                items:
                  $ref: "#/components/schemas/ProfileInfo"
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  error:
                    type: string
                    example: "Unauthorized access: Not logged-in or invalid token."
                    maxLength: 255
                    pattern: "^([[:print:]])*$"
        '404':
          description: Profile not found
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  error:
                    type: string
                    example: "Profile not found."
                    maxLength: 255
                    pattern: "^([[:print:]])*$"
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  error:
                    type: string
                    example: "Forbidden access: User does not own this profile, therefore cannot connect to this profile."
                    maxLength: 255
                    pattern: "^([[:print:]])*$"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  error:
                    type: string
                    example: "An unexpected error occurred"
                    maxLength: 255
                    pattern: "^([[:print:]])*$"

  /getConnections/:
    get:
      tags:
        - Connections
      summary: List of connected profiles
      description: List of profile_id's connected profiles, returned as a list of profile preview cards as a paginated result.
      operationId: getConnections
      parameters:
        - name: profile_id
          in: query
          required: true
          schema:
            type: integer
            format: int32
            minimum: 0
            maximum: 2147483647
            example: 11
      responses:
        '200':
          description: List of connected profiles
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/PaginatedResult"
                  - type: object
                    properties:
                      results:
                        type: array
                        maxItems: 20
                        items:
                          $ref: "#/components/schemas/ProfilePreviewCard"
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  error:
                    type: string
                    example: "Unauthorized access: Not logged-in or invalid token."
                    maxLength: 255
                    pattern: "^([[:print:]])*$"
        '404':
          description: Profile not found
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  error:
                    type: string
                    example: "Profile not found."
                    maxLength: 255
                    pattern: "^([[:print:]])*$"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  error:
                    type: string
                    example: "An unexpected error occurred"
                    maxLength: 255
                    pattern: "^([[:print:]])*$"

  /startupMembership: 
    get:
      tags:
        - Startup memberships
      summary: List of member in a startup
      description: List of startup memberships in a startup, as a paginated result.
      operationId: getStartupMembership
      responses:
        '200':
          description: List of startup memberships
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/PaginatedResult"
                  - type: object
                    properties:
                      results:
                        type: array
                        maxItems: 20
                        items:
                          $ref: "#/components/schemas/StartupMembership"
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  error:
                    type: string
                    example: "Unauthorized access: Not logged-in or invalid token."
                    maxLength: 255
                    pattern: "^([[:print:]])*$"
        '404':
          description: Startup not found
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  error:
                    type: string
                    example: "Startup not found."
                    maxLength: 255
                    pattern: "^([[:print:]])*$"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  error:
                    type: string
                    example: "An unexpected error occurred"
                    maxLength: 255
                    pattern: "^([[:print:]])*$"
    post:
      tags:
        - Startup memberships
      summary: Invite a profile to become a member of a startup. 
      description: Invite a profile to become a member of a startup.
      operationId: inviteStartupMembership
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              additionalProperties: false
              properties:
                startupProfileID:
                  type: integer
                  format: int32
                  minimum: 0
                  maximum: 2147483647
                  example: 11
                invitingMemberProfileID:
                  type: integer
                  format: int32
                  minimum: 0
                  maximum: 2147483647
                  example: 7
                role:
                  type: string
                  example: "member" # member, admin, owner
                  maxLength: 20
                  pattern: "^[a-zA-Z0-9]*$"
      responses:
        '200':
          description: Member invitation sent
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  message:
                    type: string
                    example: "Member invitation sent."
                    maxLength: 255
                    pattern: "^([[:print:]])*$"
        '404':
          description: Member not found
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  error:
                    type: string
                    example: "Member not found."
                    maxLength: 255
                    pattern: "^([[:print:]])*$"
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  error:
                    type: string
                    example: "Unauthorized access: Not logged-in or invalid token."
                    maxLength: 255
                    pattern: "^([[:print:]])*$"
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  error:
                    type: string
                    example: "Forbidden access: User does not have admin access to this startup, therefore cannot perform this operation from this startup."
                    maxLength: 255
                    pattern: "^([[:print:]])*$"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  error:
                    type: string
                    example: "An unexpected error occurred"
                    maxLength: 255
                    pattern: "^([[:print:]])*$"
    delete:
      tags:
        - Startup memberships
      summary: Remove a member profile from a startup.
      description: Remove a member profile from a startup.
      operationId: removeStartupMembership
      parameters:
        - name: startupID
          in: query
          required: true
          schema:
            type: integer
            format: int32
            minimum: 0
            maximum: 2147483647
            example: 11
        - name: memberID
          in: query
          required: true
          schema:
            type: integer
            format: int32
            minimum: 0
            maximum: 2147483647
            example: 7
      responses:
        '200':
          description: Member removed from startup.
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  message:
                    type: string
                    example: "Member removed from startup."
                    maxLength: 255
                    pattern: "^([[:print:]])*$"
        '404':
          description: Member not found in startup.
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  error:
                    type: string
                    example: "Member not found in startup."
                    maxLength: 255
                    pattern: "^([[:print:]])*$"
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  error:
                    type: string
                    example: "Unauthorized access: Not logged-in or invalid token."
                    maxLength: 255
                    pattern: "^([[:print:]])*$"
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  error:
                    type: string
                    example: "Forbidden access: User does not have admin access for this startup, therefore cannot perform this operation from this startup."
                    maxLength: 100   
                    pattern: "^([[:print:]])*$"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  error:
                    type: string
                    example: "An unexpected error occurred"
                    maxLength: 255
                    pattern: "^([[:print:]])*$"

  /dashboard/:
   get:
      tags:
        - Dashboard
      summary: Retrieve the dashboard data for a profile.
      description: Retrieve the dashboard data for a profile.
      operationId: getDashboardData
      parameters:
        - name: profileID
          in: query
          required: true
          schema:
            type: integer
            format: int32
            minimum: 0
            maximum: 2147483647
            example: 11
      responses:
        '200':
          description: Dashboard data retrieved
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  reached_count:
                    type: integer
                    minimum: 0
                  viewed_count:
                    type: integer
                    minimum: 0
                  viewed_history:
                    type: array
                    maxItems: 30
                    items:
                      type: object
                      additionalProperties: false
                      properties:
                        time:
                          type: string
                          format: timestamp
                          example: "2022-01-01T12:00:00Z"
                          pattern: "^\\d{4}-[01]\\d-[0-3]\\d[T]([01]\\d|2[0-3]):[0-5]\\d:[0-5]\\d(\\.\\d+)?(Z|[+-][01]\\d:[0-5]\\d)$"
                          maxLength: 32
                        count: 
                          type: integer
                          minimum: 0
                          maximum: 2147483647
                  connect_request_count:
                    type: integer
                    minimum: 0
                  matched_profiles_count:
                    type: integer
                    minimum: 0
                  sample_profiles:
                    type: array
                    maxItems: 4
                    items:
                      $ref: '#/components/schemas/ProfilePreviewCard'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  error:
                    type: string
                    example: "Unauthorized access: Not logged-in or invalid token."
                    maxLength: 255
                    pattern: "^([[:print:]])*$"
        '404':
          description: Profile not found
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  error:
                    type: string
                    example: "Profile not found"
                    maxLength: 255
                    pattern: "^([[:print:]])*$" 
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  error:
                    type: string
                    example: "Forbidden access: User does not have access to this profile."
                    maxLength: 255
                    pattern: "^([[:print:]])*$"
        default:  
          description: Unexpected error occurred
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  error:
                    type: string
                    example: "An unexpected error occurred"
                    maxLength: 255
                    pattern: "^([[:print:]])*$"

  /countView/:
   post:
      tags:
        - Discover
      summary: Count a view when someone presses "See more" on a profile.
      description: Count a view when someone presses "See more" on a profile.
      operationId: countView
      parameters:
        - name: fromID
          in: query
          required: true
          schema:
            type: integer
            format: int32
            minimum: 0
            maximum: 2147483647
            example: 11
        - name: toID
          in: query
          required: true
          schema:
            type: integer
            format: int32
            minimum: 0
            maximum: 2147483647
            example: 11
      responses:
        '200':
          description: View count updated
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  message:
                    type: string
                    example: "View count updated"
                    maxLength: 255
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  error:
                    type: string
                    example: "Unauthorized access: Not logged-in or invalid token."
                    maxLength: 255
                    pattern: "^[a-zA-Z0-9 _.,:;!'?()-]*$"
        '404':
          description: Profile not found
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  error:
                    type: string
                    example: "Profile not found"
                    maxLength: 255
                    pattern: "^[a-zA-Z0-9 _.,:;!'?()-]*$"
        'default':
          description: Unexpected error occurred
          content:
              application/json:
                schema:
                  type: object
                  additionalProperties: false
                  properties:
                    error:
                      type: string
                      example: "An unexpected error occurred"
                      maxLength: 255
                      pattern: "^[a-zA-Z0-9 _.,:;!'?()-]*$"
  /getViewed/:
    get: 
      tags:
        - Revisit
      summary: Get the list of profiles who visited the given profile ID
      description: Get the list of profiles who visited the given profile ID.
      operationId: getViewed
      parameters:
        - name: profileID
          in: query
          required: true
          schema:
            type: integer
            format: int32
            minimum: 0
            maximum: 2147483647
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 1048576
            example: 1
        - name: per_page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 20
            example: 10
      responses:
        '200':
          description: List of viewed profiles retrieved
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/PaginatedResult"
                  - type: object
                    properties:
                      results:
                        type: array
                        maxItems: 20
                        items:
                          $ref: "#/components/schemas/ProfilePreviewCard"
        '401': 
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  error:
                    type: string
                    example: "Unauthorized access: Not logged-in or invalid token."
                    maxLength: 255
                    pattern: "^[a-zA-Z0-9 _.,:;!'?()-]*$"
        '404':
          description: Profile not found
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  error:
                    type: string
                    example: "Profile not found"
                    maxLength: 255
                    pattern: "^[a-zA-Z0-9 _.,:;!'?()-]*$"
        'default':
         description: Unexpected error occurred
         content:
           application/json:
             schema:
               type: object
               additionalProperties: false
               properties:
                 error:
                   type: string
                   example: "An unexpected error occurred"
                   maxLength: 255
                   pattern: "^[a-zA-Z0-9 _.,:;!'?()-]*$"